surface_planner:
  # Define the odom and world frame
  # Robot's current state and reference are expressed in the odom frame (a smooth frame that drifts with respect to the world frame).
  # The world frame is used to define the MPC tasks (e.g., footstep location), thus, it doesn't drift this frame.
  odom_frame: odom  # Use odom_frame is this param is empty
  world_frame: point_cloud_odom  # Use odom_frame is this param is empty

  # Define the topic name for subscrition and publication of the MPC node
  # Note that the robot state and MPC references needs to be expressed in the odom frame.
  # Instead, for efficiency reasons, the MPC plan is expressed in the world frame.
  # robot_state_topic: /motion_control_manager/whole_body_state
  robot_state_topic: /robot/robot_state

  # Define the robot description: URDF, feet, nominal posture, locked joints, and armature
  joints_to_be_locked: [actuated_lidar_dynamixel]
  robot_description: anymal_description
  # order matters! LF LH RF RH
  # 3d_feet: [LF_FOOT, LH_FOOT, RF_FOOT, RH_FOOT] # ANYmal
  3d_feet: [FL_foot, RL_foot, FR_foot, RR_foot]
  shoulder_offsets:  [[0.367, 0.2],[-0.367, 0.2],[0.367, -0.2],[-0.367, -0.2]] 

  ###################
  ### PlaneSeg parameters for postprocessing, using SurfaceProcessingParams()
  plane_seg: false
  
  # Extract the scene as a single .stl file to post-process with hpp-affordance --> extract_methodId=0
  # Extract the scene as a multiple .stl files --> extract_methodId=1
  extract_methodId: 0
  path: /home/thomas_cbrs/install/share/walkgen-environment-data/environments # Path to .stl file.
  stl: /meshes/lab_scene.stl # File name. If method == 1 : folder name.

  margin_inner: 0.04  # Margin in [m] inside the convex surfaces (sfae footstep planinng)
  margin_outer: 0.06  # Margin in [m] ouside the convex surfaces (collision avoidance)
  n_points: 8  # Maximum Number of points for for each convex surface

  offset_z: -0.04 # Offset on the z-axis.

  # Method to remove the overlapping between surfaces :
  # 1. Run the list of surfaces starting with the lowest.
  # 2. Decomposes the lowest surface in set of convex ones by removing the upper surfaces that overlap it. (Tesselation algorithm).
  # 3. Delate some of the remaining surfaces from the list and continue using one of the following method.
  #     - BASIC (0): Intersect the lowest polygon with all the upper polygon that overlay and keep all remaining surfaces.
  #     - AREA (1): After difference and decomposition with the upper polygons, select only the remining polygon
  #             whose area is superior to min_area arg.
  #     - CONVEX (2): Apply the difference with the convex hull of the upper surfaces that intersect, to avoid
  #               having small surfaces between the upper surfaces.
  #     - AREA_CONVEX (3): Both 1 and 2 methods.
  method_id: 1
  poly_size: 10  # Maximum size of the polygon for the convex decomposition.
  min_area: 0.03  # Area under which the remaining surfaces is delated.

  ####################
  ### Surface planner parameters, using SurfacePlannerParams()
  com: false  # Optimize CoM trajectory in SL1M
  horizon: 8 # MAximum number of optimised fsteps.
  N_phase_return: 3 # Number of surfaces returned by SL1M for each foot.
  # Heightmap
  fitsize_x: 10  # Number of point on x-axis (base frame) to evaluate the terrain height
  fitsize_y: 5  # Number of point on y-axis (base frame) to evaluate the terrain height
  fitlength: 0.3  # Square size [m] around the position of the robot to evaluate the terrain height
  recompute_slope: true  # Recompute the slope of the terrain for each contact phase configuration
  # Recording
  recording: false # Record timing in a .txt file
  folder_path: "/home/thomas_cbrs/devel/tmp/paper_timings/stair_down/timings/" # Folder path for recording 

  ####################
  ### Topic to exchange with footstep planner
  footstep_manager_topic: /walkgen/fstep_manager
  surface_planner_topic: /walkgen/surface_planner
  plane_seg_topic: /plane_seg/hull_marker_array
  initial_config: walkgen/initial_config # Initial configuration.
  initial_floor_height: walkgen/initial_floor_height # Initial floor height.

  # Visualization, publish marker and markerArray for RVIZ visualization
  visualization: true



  