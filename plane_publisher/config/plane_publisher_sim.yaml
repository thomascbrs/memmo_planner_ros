plane_publisher:
  # Define the odom and world frame
  # Robot's current state and reference are expressed in the odom frame (a smooth frame that drifts with respect to the world frame).
  # The world frame is used to define the MPC tasks (e.g., footstep location), thus, it doesn't drift this frame.
  odom_frame: map  # Use odom_frame is this param is empty
  world_frame: map  # Use odom_frame is this param is empty

  # Define the topic name for subscrition and publication of the MPC node
  # Note that the robot state and MPC references needs to be expressed in the odom frame.
  # Instead, for efficiency reasons, the MPC plan is expressed in the world frame.
  robot_state_topic: /motion_control_manager/whole_body_state

  # Define the robot description: URDF, feet, nominal posture, locked joints, and armature
  joints_to_be_locked: [actuated_lidar_dynamixel]
  robot_description: robot_description
  3d_feet: [LF_FOOT, LH_FOOT, RF_FOOT, RH_FOOT]

  # Use URDF of the environment or plane_seg visualisation.
  plane_seg: false

  # PlaneSeg parameters for postprocessing
  margin: 0.065  # Margin in [m] inside the convex surfaces
  n_points: 6  # Maximum Number of points for for each convex surface

  # Method to remove the overlapping between surfaces :
  # 1. Run the list of surfaces starting with the lowest.
  # 2. Decomposes the lowest surface in set of convex ones by removing the upper surfaces that overlap it. (Tesselation algorithm).
  # 3. Delate some of the remaining surfaces from the list and continue using one of the following method.
  #     - BASIC (0): Intersect the lowest polygon with all the upper polygon that overlay and keep all remaining surfaces.
  #     - AREA (1): After difference and decomposition with the upper polygons, select only the remining polygon
  #             whose area is superior to min_area arg.
  #     - CONVEX (2): Apply the difference with the convex hull of the upper surfaces that intersect, to avoid
  #               having small surfaces between the upper surfaces.
  #     - AREA_CONVEX (3): Both 1 and 2 methods.
  method_id: 3
  poly_size: 10  # Maximum size of the polygon for the convex decomposition.
  min_area: 0.03  # Area under which the remaining surfaces is delated.

  # Heightmap and URDF path
  use_urdf_surfaces: false
  path: /usr/local/share/uoe_lab_resources
  stl: /meshes/lab_scene.stl
